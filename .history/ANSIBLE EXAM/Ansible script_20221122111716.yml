---
- name: Setting up laravel app with ansible.
  hosts: all
  remote_user: root
 
 
  tasks:
    - name: getting updats
      apt:
        update_cache: true
        upgrade: true
    - name: installing package for file updats and linux compliance.
      apt:
        name:
          - python3-pip
          - git
          - lsb-release
          - ca-certificates
          - apt-transport-https
          - software-properties-common
          - gnupg2
          - curl
          - wget
          - debconf-utils
          - libaio1
    - name: install python pip
      shell: python3 -m pip install PyMySQL
    - name: cryptography
      shell: pip install python
    - name: installing apache and its dependencies
      apt:
        name: apache2, apache2-utils
    - name: ppa
      apt_repository:
        repo: ppa:ondrej/php
    - name: update cache
      apt:
        update_cache: true
        upgrade: true
    - name: installing php packages that can work on apache server
      apt:
        name: php8.1, libapache2-mod-php8.1, php8.1-cli, php8.1-common, php8.1-mysql, php8.1-opcache, php8.1-soap, php8.1-zip, php8.1-intl, php8.1-bcmath, php8.1-xml, php8.1-xmlrpc, php8.1-curl, php8.1-gd, php8.1-imagick, php8.1-cli, php8.1-dev, php8.1-imap, php8.1-mbstring
    - name: installing mysql to work on database
      shell:
        debconf-set-selections <<EOF
        mysql-apt-config mysql-apt-config/select-server select mysql-8.0
        "mysql-community-server mysql-community-server/root-pass password root"
        "mysql-community-server mysql-community-server/re-root-pass password root"
        EOF
    - name: installing wget for downloading and working with API's
      shell: wget --user-agent="Mozilla" -O /tmp/mysql-apt-config_0.8.24-1_all.deb https://dev.mysql.com/get/mysql-apt-config_0.8.24-1_all.deb
    - name: debian package manager for linux
      shell: sudo DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/mysql-apt-config_0.8.24-1_all.deb < /dev/null > /dev/null
    - name: update cache
      apt:
        update_cache: true
        upgrade: true
    - name: debian front-end
      shell: DEBIAN_FRONTEND=noninteractive apt-get install mysql-server mysql-client --assume-yes --force-yes < /dev/null > /dev/null
    - name: creating mysql dtabase for storing data
      shell: 'mysql -ne "{{ item }}"'
      with_items:
        - ;
    - name: laravel
      shell: 'mysql -ne "{{ item }}"'
      with_items:
        - CREATE USER 'damilola'@'localhost' IDENTIFIED BY 'laravel';
    - name: sql string
      shell: 'mysql -ne "{{ item }}"'
      with_items:
        - GRANT ALL PRIVILEGES ON laravel.* TO 'damilola'@'localhost';
    - name: granting database user privileges
      shell: 'mysql -ne "{{ item }}"'
      with_items:
        - FLUSH PRIVILEGES;
    - name: setting up .env file
      copy:
        dest: /var/www/mogbojuloluwa.me/.env
        content: |
          APP_NAME="Laravel"
          APP_ENV=local
          APP_KEY=
          APP_DEBUG=true
          APP_URL=https://mogbojuloluwa.me
          APP_PORT=3000
          LOG_CHANNEL=stack
          LOG_DEPRECATIONS_CHANNEL=null
          LOG_LEVEL=debug
          DB_CONNECTION=mysql
          DB_HOST=localhost
          DB_PORT=3306
          DB_DATABASE=laravel
          DB_USERNAME=damilola
          DB_PASSWORD=laravel
          BROADCAST_DRIVER=log
          CACHE_DRIVER=file
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=sync
          SESSION_DRIVER=file
          SESSION_LIFETIME=120
          MEMCACHED_HOST=127.0.0.1
          REDIS_HOST=127.0.0.1
          REDIS_PASSWORD=null
          REDIS_PORT=6379
          MAIL_MAILER=smtp
          MAIL_HOST=mailhog
          MAIL_PORT=1025
          MAIL_USERNAME=null
          MAIL_PASSWORD=null
          MAIL_ENCRYPTION=null
          MAIL_FROM_ADDRESS="contact@mogbojuloluwa.me"
          MAIL_FROM_NAME="$Laravel"
          AWS_ACCESS_KEY_ID=
          AWS_SECRET_ACCESS_KEY=
          AWS_DEFAULT_REGION=us-east-1
          AWS_BUCKET=
          AWS_USE_PATH_STYLE_ENDPOINT=false
          PUSHER_APP_ID=
          PUSHER_APP_KEY=
          PUSHER_APP_SECRET=
          PUSHER_APP_CLUSTER=mt1
          MIX_PUSHER_APP_KEY="$
          MIX_PUSHER_APP_CLUSTER=""
          L5_SWAGGER_GENERATE_ALWAYS=true
          SAIL_XDEBUG_MODE=develop,debug
          SAIL_SKIP_CHECKS=true
    - name: checking routes
      blockinfile:
        path: /var/www/mogbojuloluwa.me/routes/web.php
        block: |
          Route::get('/', function () {
            return view('welcome');
          });
    - name: creating rea,write,execute permissions for files
      shell: chown -R root:root /var/www/mogbojuloluwa.me
    - name: write permission
      shell: chmod -R 0755 /var/www/mogbojuloluwa.me
    - name: user privileges
      shell: chmod -R 0755 /var/www/mogbojuloluwa.me/storage
    - name: chmod
      shell: chmod -R 0755 /var/www/mogbojuloluwa.me/bootstrap/cache
    - name: 
      copy:
        dest: "/var/www/mogbojuloluwa.me/.htaccess"
        content: |
          <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteCond %{REQUEST_URI} !^/public/
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteRule ^(.*)$ /public/$1
            RewriteRule ^(/)?$ public/index.php [L]
          </IfModule>
    - name: installing composer for dependency management in php
      shell: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - name: php 8
      shell: php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - name: php composer set-up
      shell: php composer-setup.php
    - name: php 
      shell: php -r "unlink('composer-setup.php');"
    - name: move file 
      shell: mv composer.phar /usr/local/bin/composer
    - name: creating project
      shell: cd /var/www/mogbojuloluwa.me && composer create-project -n
    - name: artisan migrate
      shell: cd /var/www/mogbojuloluwa.me && php artisan migrate --seed
    - name: configuring apache and creating virtual host for domains
      copy:
        dest: "/etc/apache2/sites-available/mogbojuloluwa.me.conf"
        content: |
          <VirtualHost *:80>
              ServerAdmin email@domain.com
              ServerName mogbojuloluwa.me
              ServerAlias mogbojuloluwa.me
              DocumentRoot /var/www/mogbojuloluwa.me/
              <Directory /var/www/mogbojuloluwa.me/>
                  Options Indexes FollowSymLinks
                  AllowOverride All
                  Require all granted
              </Directory>
              ErrorLog ${APACHE_LOG_DIR}/error.log
              CustomLog ${APACHE_LOG_DIR}/access.log combined
          </VirtualHost>
    - name: disabling default apache page
      shell: a2dissite 000-default.conf
    - name: script to enable domain
      shell: a2ensite mogbojuloluwa.me.conf
    - name: to rewrite the url
      shell: a2enmod rewrite
    - name: restarting apache2
      service:
        name: apache2
        state: restarted
    - name: to create new owner for folders
      shell: chown -R www-data:www-data /var/www/mogbojuloluwa.me
    
 